package uk.gov.hmcts.reform.laubackend.idam.controllers;

import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import io.swagger.annotations.ApiResponse;
import io.swagger.annotations.ApiResponses;
import lombok.extern.slf4j.Slf4j;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.dao.EmptyResultDataAccessException;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.RestController;
import springfox.documentation.annotations.ApiIgnore;
import uk.gov.hmcts.reform.laubackend.idam.exceptions.InvalidRequestException;
import uk.gov.hmcts.reform.laubackend.idam.service.LogonLogService;

import static org.springframework.http.HttpStatus.BAD_REQUEST;
import static org.springframework.http.HttpStatus.INTERNAL_SERVER_ERROR;
import static org.springframework.http.HttpStatus.NOT_FOUND;
import static org.springframework.http.HttpStatus.OK;
import static org.springframework.http.MediaType.APPLICATION_JSON_VALUE;
import static uk.gov.hmcts.reform.laubackend.idam.utils.InputParamsVerifierHelper.verifyIdNotEmpty;

@ApiIgnore
@RestController
@Slf4j
@Api(tags = "IdAM logon database delete operation.", value = "This is the Log and Audit "
        + "Back-End API that will delete database records to facilitate removal of the test data,"
        + " generated by functional and e2e tests")
@SuppressWarnings({"PMD.ExcessiveImports", "PMD.UnnecessaryAnnotationValueElement"})
public class IdamLogonAuditDeleteController {

    @Autowired
    private LogonLogService logonLogService;

    @ApiOperation(tags = "DELETE end-point", value = "Delete IdAM logon id record from the database.",
            notes = "This API will delete a record from the lau-idam database for the given IdAM logon id. "
                    + "It is intended to be called from the test api for testing purposes."
    )
    @ApiResponses({
            @ApiResponse(
                    code = 200,
                    message = "Logonlog record has been deleted"
            ),
            @ApiResponse(code = 401, message = "Unauthorized"),
            @ApiResponse(code = 403, message = "Forbidden"),
            @ApiResponse(code = 404, message = "IdAM logon id not found in the database"),
            @ApiResponse(code = 400, message = "Missing IdAM logon id from the API request"),
            @ApiResponse(code = 500, message = "Internal Server Error")
    })
    @DeleteMapping(
            path = "/audit/logon/deleteAuditLogonRecord",
            produces = APPLICATION_JSON_VALUE,
            consumes = APPLICATION_JSON_VALUE
    )
    @ResponseBody
    public ResponseEntity<Object> deleteLogonLog(@RequestParam("logonId") final String logonId) {

        try {
            verifyIdNotEmpty(logonId);

            logonLogService.deleteLogonLogById(logonId);

            return new ResponseEntity<>(null, OK);
        } catch (final InvalidRequestException invalidRequestException) {

            return getExceptionResponseEntity(invalidRequestException, BAD_REQUEST);

        } catch (final EmptyResultDataAccessException emptyResultDataAccessException) {

            return getExceptionResponseEntity(emptyResultDataAccessException, NOT_FOUND);

        } catch (final Exception exception) {

            return getExceptionResponseEntity(exception, INTERNAL_SERVER_ERROR);

        }
    }

    private ResponseEntity<Object> getExceptionResponseEntity(final Exception exception, final HttpStatus httpStatus) {
        log.error(
                "deleteLogonLog API call failed due to error - {}",
                exception.getMessage(),
                exception
        );
        return new ResponseEntity<>(null, httpStatus);
    }
}
