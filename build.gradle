buildscript {
  repositories {
    mavenCentral()
  }
  dependencies {
    classpath("net.serenity-bdd:serenity-gradle-plugin:2.6.0")
  }
}

plugins {
    id 'application'
    id 'checkstyle'
    id 'pmd'
    id 'jacoco'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'org.springframework.boot' version '2.7.0'
    id 'org.owasp.dependencycheck' version '7.1.0.1'
    id 'com.github.ben-manes.versions' version '0.42.0'
    id 'org.sonarqube' version '3.3'
    id "info.solidsoft.pitest" version '1.7.4'
    id 'com.gorylenko.gradle-git-properties' version '2.4.1'
    id 'org.flywaydb.flyway' version '8.5.10'
}

apply plugin: "com.gorylenko.gradle-git-properties"
apply plugin: 'net.serenity-bdd.aggregator'
apply plugin: "info.solidsoft.pitest"

group = 'uk.gov.hmcts.reform'
version = '0.0.1'

allprojects {
    sourceCompatibility = '11'
    targetCompatibility = '11'
}

gitProperties {
    gitPropertiesDir = new File("${project.rootDir}/src/main/resources/uk/gov/hmcts/reform/laubackend/idam/gitcommit")
    keys = ['git.commit.id', 'git.commit.time']
    dateFormat = "yyyy-MM-dd'T'HH:mmZ"
    dateFormatTimeZone = "GMT"
}

sourceSets {
    test {
        java {
            compileClasspath += main.output
            runtimeClasspath += main.output
            srcDir file('src/test/java')
        }
        resources.srcDir file('src/test/resources')
    }

    functionalTest {
        java {
            compileClasspath += main.output
            runtimeClasspath += main.output
            srcDir file('src/functionalTest/java')
        }
        resources.srcDir file('src/functionalTest/resources')
    }

    integrationTest {
        java {
            compileClasspath += main.output
            runtimeClasspath += main.output
            srcDir file('src/integrationTest/java')
        }
        resources.srcDir file('src/integrationTest/resources')
    }

    smokeTest {
        java {
            compileClasspath += main.output
            runtimeClasspath += main.output
            srcDir file('src/smokeTest/java')
        }
        resources.srcDir file('src/smokeTest/resources')
    }
}

tasks.withType(JavaCompile) {
    options.compilerArgs << "-Xlint:unchecked" << "-Werror"
}

test {
    useJUnitPlatform()
    failFast = true
}

configurations {
    cucumberRuntime {
        extendsFrom testImplementation
    }
    integrationTestCompile.extendsFrom testCompile
    integrationTestRuntime.extendsFrom testRuntime
    functionalTestCompile.extendsFrom testCompile
    functionalTestRuntime.extendsFrom testRuntime
}

task unit(type: Test, description: 'Runs the unit tests.', group: 'Verification') {
    testClassesDirs = sourceSets.test.output.classesDirs
    classpath = sourceSets.test.runtimeClasspath
    useJUnitPlatform()
}

task functional(type: Test) {

    systemProperty "scenario", System.getProperty('scenario')

    description = "Runs functional tests"
    group = "Verification"
    testClassesDirs = sourceSets.functionalTest.output.classesDirs
    classpath = sourceSets.functionalTest.runtimeClasspath
    finalizedBy aggregate
}

task integration(type: Test) {
    description = "Runs integration tests"
    group = "Verification"
    testClassesDirs = sourceSets.integrationTest.output.classesDirs
    classpath = sourceSets.integrationTest.runtimeClasspath
    mustRunAfter test
}

check.dependsOn integration


task smoke(type: Test) {
    description = "Runs Smoke Tests"
    testClassesDirs = sourceSets.smokeTest.output.classesDirs
    classpath = sourceSets.smokeTest.runtimeClasspath
}

task fortifyScan(type: JavaExec) {
    main = "uk.gov.hmcts.fortifyclient.FortifyClientMainApp"
    classpath += sourceSets.test.runtimeClasspath
    jvmArgs = ['--add-opens=java.base/java.lang.reflect=ALL-UNNAMED']
}

checkstyle {
    maxWarnings = 0
    toolVersion = '8.29'
    getConfigDirectory().set(new File(rootDir, 'config/checkstyle'))
}

pmd {
    toolVersion = "6.39.0"
    sourceSets = [sourceSets.main, sourceSets.test, sourceSets.functionalTest, sourceSets.integrationTest, sourceSets.smokeTest]
    reportsDir = file("$project.buildDir/reports/pmd")
    // https://github.com/pmd/pmd/issues/876
    ruleSets = []
    ruleSetFiles = files("config/pmd/ruleset.xml")
}

project.tasks['jacocoTestReport'].dependsOn test, integration

jacocoTestReport {
    executionData(test, integration)
    reports {
        xml.required = true
        csv.required = false
        xml.destination file("${buildDir}/reports/jacoco/test/jacocoTestReport.xml")
    }
}

pitest {
    pitestVersion.set('1.7.4')
    junit5PluginVersion.set('0.15')
    targetClasses = ['uk.gov.hmcts.reform.laubackend.*']
    excludedClasses = [
            'uk.gov.hmcts.reform.laubackend.idam.madeup.*'
    ]
    threads = 10
    enableDefaultIncrementalAnalysis = true
    outputFormats = ['XML', 'HTML']
    timestampedReports = false
    mutationThreshold = 50
    timeoutConstInMillis = 30000
    mutators.set([
            'CONDITIONALS_BOUNDARY',
            'INCREMENTS',
            'INVERT_NEGS',
            'MATH',
            'NEGATE_CONDITIONALS',
            'VOID_METHOD_CALLS',
            'EMPTY_RETURNS',
            'FALSE_RETURNS',
            'NULL_RETURNS',
            'PRIMITIVE_RETURNS',
            'TRUE_RETURNS',
            'REMOVE_CONDITIONALS'
    ])
}

project.tasks['pitest'].group = "Verification"

project.tasks['sonarqube'].dependsOn jacocoTestReport

sonarqube {
    properties {
        property "sonar.projectName", "Reform :: lau-idam-backend"
        property "sonar.projectKey", "uk.gov.hmcts.reform:lau-idam-backend"
        property "sonar.coverage.jacoco.xmlReportPaths", "${jacocoTestReport.reports.xml.destination.path}"
        property "sonar.jacoco.reportPath", "${project.buildDir}/jacoco/test.exec"
        property "sonar.pitest.mode", "reuseReport"
        property "sonar.pitest.reportsDirectory", "build/reports/pitest"
    }
}

// before committing a change, make sure task still works
dependencyUpdates {
    def isNonStable = { String version ->
        def stableKeyword = ['RELEASE', 'FINAL', 'GA'].any { qualifier -> version.toUpperCase().contains(qualifier) }
        def regex = /^[0-9,.v-]+$/
        return !stableKeyword && !(version ==~ regex)
    }
    rejectVersionIf { selection -> // <---- notice how the closure argument is named
        return isNonStable(selection.candidate.version) && !isNonStable(selection.currentVersion)
    }
}

// https://jeremylong.github.io/DependencyCheck/dependency-check-gradle/configuration.html
dependencyCheck {
    // Specifies if the build should be failed if a CVSS score above a specified level is identified.
    // range of 0-10 fails the build, anything greater and it doesn't fail the build
    failBuildOnCVSS = System.getProperty('dependencyCheck.failBuild') == 'true' ? 0 : 11
    suppressionFile = 'config/owasp/suppressions.xml'

    analyzers {
        // Disable scanning of .NET related binaries
        assemblyEnabled = false
    }
}

dependencyManagement {
    dependencies {
        dependency group: 'org.bouncycastle', name: 'bcpkix-jdk15on', version: '1.70'
        // CVE-2018-10237 - Unbounded memory allocation
        dependencySet(group: 'com.google.guava', version: '31.0.1-jre') {
            entry 'guava'
        }
        dependencySet(group: 'org.springframework.cloud', version: '3.1.3') {
            entry 'spring-cloud-starter-openfeign'
            entry 'spring-cloud-openfeign-core'
        }
        dependencySet(group: 'org.apache.tomcat.embed', version: '9.0.63') {
          entry 'tomcat-embed-core'
          entry 'tomcat-embed-websocket'
        }
        dependencySet(group: 'org.springframework.security', version: '5.7.1') {
            entry 'spring-security-core'
            entry 'spring-security-test'
        }
    }
    imports {
        mavenBom 'org.springframework.cloud:spring-cloud-dependencies:2021.0.2'
    }
}

repositories {
    mavenLocal()
    mavenCentral()
    jcenter()
    maven {
        url 'https://jitpack.io'
    }
}

def versions = [
        junit             : '5.8.2',
        junitPlatform     : '1.8.2',
        reformLogging     : '5.1.7',
        springBoot        : springBoot.class.package.implementationVersion,
        springfoxSwagger  : '3.0.0',
        springfoxSwaggerui: '2.9.2',
        serenity          : '2.6.0',
        gradlePitest      : '1.7.4',
        sonarPitest       : '0.5',
        lombok            : '1.18.12',
        testcontainers    : '1.16.2',
        restAssured       : '4.4.0',
        serviceAuthVersion: '4.0.2',
        commonsIo         : '2.11.0',
        cucumber          : '6.11.0',
        wiremock          : '2.21.0',
        fasterXmlJackson  : '2.13.2',
        springFramework   : '5.3.21',
        log4j             : '2.17.2',
        springCloud       : '3.1.2',
        springSecurity    : '5.7.1'
]

ext.libraries = [
        junit5: [
                "org.junit.jupiter:junit-jupiter-api:${versions.junit}",
                "org.junit.jupiter:junit-jupiter-engine:${versions.junit}",
                "org.junit.jupiter:junit-jupiter-params:${versions.junit}",
                "org.junit.platform:junit-platform-commons:${versions.junitPlatform}",
                "org.junit.platform:junit-platform-engine:${versions.junitPlatform}"
        ]
]

configurations.all {
    resolutionStrategy {
        eachDependency { DependencyResolveDetails details ->
            if (details.requested.group in ['org.apache.logging.log4j']) {
                details.useVersion versions.log4j
            }
        }
    }
}

dependencies {

    // exclude spring-cloud-context as it is already included in spring-cloud-starter-netflix-hystrix
    def withoutSpringCloudContext = {
        exclude group: 'org.springframework.cloud', module: 'spring-cloud-context'
    }

    implementation group: 'commons-io', name: 'commons-io', version: versions.commonsIo

    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-web'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-actuator'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-aop'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-json'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-data-jpa'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-jdbc'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-security'

    implementation group: 'org.springframework', name:'spring-aop', version: versions.springFramework
    implementation group: 'org.springframework', name:'spring-aspects', version: versions.springFramework
    implementation group: 'org.springframework', name:'spring-beans', version: versions.springFramework
    implementation group: 'org.springframework', name:'spring-context', version: versions.springFramework
    implementation group: 'org.springframework', name:'spring-core', version: versions.springFramework
    implementation group: 'org.springframework', name:'spring-expression', version: versions.springFramework
    implementation group: 'org.springframework', name:'spring-jcl', version: versions.springFramework
    implementation group: 'org.springframework', name:'spring-jdbc', version: versions.springFramework
    implementation group: 'org.springframework', name:'spring-orm', version: versions.springFramework
    implementation group: 'org.springframework', name:'spring-oxm', version: versions.springFramework
    implementation group: 'org.springframework', name:'spring-tx', version: versions.springFramework
    implementation group: 'org.springframework', name:'spring-web', version: versions.springFramework
    implementation group: 'org.springframework', name:'spring-webmvc', version: versions.springFramework

    implementation group: 'io.springfox', name: 'springfox-swagger2', version: versions.springfoxSwagger
    implementation group: 'io.springfox', name: 'springfox-swagger-ui', version: versions.springfoxSwaggerui

    implementation group: 'uk.gov.hmcts.reform', name: 'logging', version: versions.reformLogging
    implementation group: 'uk.gov.hmcts.reform', name: 'logging-appinsights', version: versions.reformLogging

    implementation group: 'org.springframework.cloud', name: 'spring-cloud-starter-netflix-hystrix', version: '2.2.10.RELEASE'
    implementation group: 'org.springframework.cloud', name: 'spring-cloud-starter-bootstrap', version: versions.springCloud
    implementation group: 'org.springframework.cloud', name: 'spring-cloud-starter-openfeign', version: versions.springCloud

    implementation group: 'org.springframework.security', name: 'spring-security-web', version: versions.springSecurity
    implementation group: 'org.springframework.security', name: 'spring-security-crypto', version: versions.springSecurity
    implementation group: 'org.springframework.security', name: 'spring-security-config', version: versions.springSecurity

    implementation group: 'org.flywaydb', name: 'flyway-core', version: '8.5.10'
    implementation group: 'org.postgresql', name: 'postgresql', version: '42.3.3'

    implementation group: 'org.apache.logging.log4j', name: 'log4j-api', version:versions.log4j
    implementation group: 'org.apache.logging.log4j', name: 'log4j-to-slf4j', version:versions.log4j

    implementation group: "com.networknt", name: "json-schema-validator", version: "1.0.71"
    implementation group: "com.gilecode.yagson", name: "j9-reflection-utils", version: "1.0"
    implementation group: 'org.projectlombok', name: 'lombok', version: versions.lombok
    implementation group: 'org.springframework.boot', name: 'spring-boot-devtools'

    implementation group: 'com.fasterxml.jackson', name: 'jackson-bom', version: versions.fasterXmlJackson, ext: 'pom'
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: versions.fasterXmlJackson
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.13.3'

    implementation group: 'com.github.hmcts', name: 'service-auth-provider-java-client', version: versions.serviceAuthVersion
    implementation group: 'uk.gov.hmcts.reform', name: 'idam-client', version: '1.5.5'
    implementation group: 'uk.gov.hmcts.reform', name: 'properties-volume-spring-boot-starter', version: '0.1.0', withoutSpringCloudContext
    implementation group: 'uk.gov.hmcts.reform', name: 'logging-appinsights', version: '5.1.7'

    testImplementation group: 'net.serenity-bdd', name: 'serenity-core', version: versions.serenity
    testImplementation group: 'net.serenity-bdd', name: 'serenity-junit', version: versions.serenity
    testImplementation group: 'net.serenity-bdd', name: 'serenity-rest-assured', version: versions.serenity
    testImplementation group: 'net.serenity-bdd', name: 'serenity-spring', version: versions.serenity

    testImplementation group: 'io.cucumber', name: 'cucumber-java8', version: versions.cucumber
    testImplementation group: 'io.cucumber', name: 'cucumber-spring', version: versions.cucumber
    testImplementation group: 'io.cucumber', name: 'cucumber-junit', version: versions.cucumber
    testImplementation group: 'io.cucumber', name: 'cucumber-java', version: versions.cucumber
    testImplementation group: 'io.cucumber', name: 'cucumber-spring', version: versions.cucumber
    testImplementation group: 'com.github.tomakehurst', name: 'wiremock-jre8-standalone', version: versions.wiremock

    annotationProcessor group: 'org.projectlombok', name: 'lombok', version: versions.lombok

    testCompile group: 'info.solidsoft.gradle.pitest', name: 'gradle-pitest-plugin', version: versions.gradlePitest
    testCompile 'org.codehaus.sonar-plugins:sonar-pitest-plugin:0.5'

    testCompile group: 'org.testcontainers', name: 'testcontainers', version: versions.testcontainers
    testCompile group: 'org.testcontainers', name: 'postgresql', version: versions.testcontainers

    implementation group: 'com.h2database', name: 'h2', version: '2.1.214'

    testImplementation 'com.github.hmcts:fortify-client:1.2.2:all'

    integrationTestCompile group: 'org.testcontainers', name: 'testcontainers', version: versions.testcontainers
    integrationTestCompile group: 'org.testcontainers', name: 'postgresql', version: versions.testcontainers

    integrationTestImplementation group: 'org.testcontainers', name: 'testcontainers', version: versions.testcontainers
    integrationTestImplementation group: 'org.testcontainers', name: 'postgresql', version: versions.testcontainers
    integrationTestImplementation group: 'org.projectlombok', name: 'lombok', version: versions.lombok
    integrationTestAnnotationProcessor group: 'org.projectlombok', name: 'lombok', version: versions.lombok

    testImplementation libraries.junit5
    testImplementation group: 'org.springframework.boot', name: 'spring-boot-starter-test', {
        exclude group: 'junit', module: 'junit'
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }

    integrationTestImplementation sourceSets.main.runtimeClasspath
    integrationTestImplementation sourceSets.test.runtimeClasspath

    functionalTestImplementation sourceSets.main.runtimeClasspath
    functionalTestImplementation sourceSets.test.runtimeClasspath

    smokeTestImplementation sourceSets.main.runtimeClasspath
    smokeTestImplementation sourceSets.test.runtimeClasspath

    functionalTestImplementation group: 'org.projectlombok', name: 'lombok', version: versions.lombok
    functionalTestAnnotationProcessor group: 'org.projectlombok', name: 'lombok', version: versions.lombok

    smokeTestImplementation group: 'io.rest-assured', name: 'rest-assured', version: versions.restAssured
    smokeTestImplementation group: 'io.rest-assured', name: 'rest-assured-common', version: versions.restAssured
    smokeTestImplementation group: 'io.rest-assured', name: 'json-path', version: versions.restAssured
    smokeTestImplementation group: 'io.rest-assured', name: 'xml-path', version: versions.restAssured

    implementation 'junit:junit:4.13.2'

//Added for FN tests
    testImplementation group: 'io.rest-assured', name: 'rest-assured', version: versions.restAssured
    testImplementation group: 'io.rest-assured', name: 'json-path', version: versions.restAssured
    testImplementation group: 'io.rest-assured', name: 'xml-path', version: versions.restAssured
    testImplementation group: 'com.google.code.gson', name: 'gson', version: '2.9.0'
    testImplementation group: 'com.googlecode.junit-toolbox', name: 'junit-toolbox', version: '2.4'
    testImplementation group: 'org.testng', name: 'testng', version: '7.5'
    testImplementation group: 'au.com.dius.pact.provider', name: 'junit5', version: '4.1.7'
    testImplementation group: 'au.com.dius.pact.provider', name: 'junit', version: '4.1.7'
    testImplementation group: 'au.com.dius.pact.provider', name: 'junit5spring', version: '4.1.7'

    testImplementation group: 'io.cucumber', name: 'cucumber-java', version: versions.cucumber
    testImplementation group: 'io.cucumber', name: 'cucumber-junit', version: versions.cucumber

    cucumberRuntime group: 'io.cucumber', name: 'cucumber-java', version: versions.cucumber
    cucumberRuntime group: 'org.springframework', name: 'spring-web', version: versions.springFramework
    cucumberRuntime group: 'org.springframework.security', name: 'spring-security-test'
    cucumberRuntime group: 'io.rest-assured', name: 'rest-assured', version: versions.restAssured
    cucumberRuntime group: 'io.rest-assured', name: 'json-path', version: versions.restAssured
    cucumberRuntime group: 'io.rest-assured', name: 'xml-path', version: versions.restAssured
    cucumberRuntime group: 'net.serenity-bdd', name: 'serenity-rest-assured'
    cucumberRuntime group: 'com.google.code.gson', name: 'gson', version: '2.8.5'
    cucumberRuntime group: 'com.googlecode.junit-toolbox', name: 'junit-toolbox', version: '2.4'
    cucumberRuntime group: 'org.testng', name: 'testng', version: '7.0.0-beta3'

    testCompileOnly group: 'org.projectlombok', name: 'lombok'
    testAnnotationProcessor group: 'org.projectlombok', name: 'lombok'

    testImplementation group: 'javax.el', name: 'javax.el-api', version: '3.0.0'
    testImplementation group: 'net.sourceforge.htmlunit', name: 'htmlunit', version: '2.61.0'
    testImplementation group: 'net.serenity-bdd', name: 'serenity-rest-assured'
    testImplementation(group: 'net.serenity-bdd', name: 'serenity-core') {
        exclude(module: 'htmlunit')
    }
  testImplementation group: 'net.serenity-bdd', name: 'serenity-junit'

}

test {
    useJUnitPlatform()
    failFast = true
}

flyway {
    url = System.getenv('FLYWAY_URL')
    user = System.getenv('FLYWAY_USER')
    password = System.getenv('FLYWAY_PASSWORD')

    if (System.getenv("LAU_IDAM_DB_PASSWORD")) {
        placeholders = [
                'LAU_IDAM_DB_PASSWORD': System.getenv("LAU_IDAM_DB_PASSWORD")
        ]
    }

    baselineOnMigrate = true
    baselineVersion = '000'
}

import org.flywaydb.gradle.task.FlywayMigrateTask

task migratePostgresDatabase(type: FlywayMigrateTask) {
    baselineOnMigrate = true
    if (project.hasProperty("dburl")) {
        url = "jdbc:postgresql://${dburl}"
    }
}

mainClassName = 'uk.gov.hmcts.reform.laubackend.idam.Application'

bootJar {
    getArchiveFileName().set(provider {
        'lau-idam-backend.jar'
    })

    manifest {
        attributes('Implementation-Version': project.version.toString())
    }
}

// Gradle 7.x issue, workaround from: https://github.com/gradle/gradle/issues/17236#issuecomment-894768083
rootProject.tasks.named("processSmokeTestResources") {
    duplicatesStrategy = 'include'
}

rootProject.tasks.named("processIntegrationTestResources") {
    duplicatesStrategy = 'include'
}

rootProject.tasks.named("processFunctionalTestResources") {
    duplicatesStrategy = 'include'
}

rootProject.tasks.named("processTestResources") {
    duplicatesStrategy = 'include'
}

rootProject.tasks.named("processResources") {
  dependsOn("generateGitProperties")
}

wrapper {
    distributionType = Wrapper.DistributionType.ALL
}
